# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
    - main
    - "dev/create-ci"

pool:
    vmImage: "windows-2022"

variables:
    solutionGallery: "**/WinUIGallery.DesktopWap.sln"
    solutionUITests: "**/UITests.sln"
    buildPlatform: "x64"
    buildConfiguration: "Debug"
    appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

stages:
    - stage: Build
      jobs:
          - job:
            displayName: Build
            steps:
                - task: NuGetToolInstaller@1
                  displayName: Install NuGet 5.8.0
                  inputs:
                      versionSpec: 5.8.0
                - task: NuGetCommand@2
                  inputs:
                    command: 'restore'
                    restoreSolution: '**/*.sln'
                    feedsToUse: 'config'
                    nugetConfigPath: '$(System.DefaultWorkingDirectory)\nuget.config'
                - task: VSBuild@1
                  inputs:
                      platform: $(buildPlatform)
                      solution: "$(solutionGallery)"
                      configuration: "$(buildConfiguration)"
                      msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=SideloadOnly /p:AppxPackageSigningEnabled=true'

                - task: NuGetCommand@2
                  displayName: Restore packages
                  inputs:
                      restoreSolution: "$(solutionUITests)"

                - task: VSBuild@1
                  inputs:
                      platform: "Any CPU"
                      solution: "$(solutionUITests)"
                      configuration: "$(buildConfiguration)"

                - task: PublishPipelineArtifact@1
                  inputs:
                      targetPath: '$(System.DefaultWorkingDirectory)\UITests\bin\$(buildConfiguration)\net5.0'
                      artifact: "uitests_$(buildConfiguration)_$(buildPlatform)"
                      publishLocation: "pipeline"

                - task: PublishPipelineArtifact@1
                  inputs:
                      targetPath: '$(Build.ArtifactStagingDirectory)\AppxPackages\'
                      artifact: "appxbundles_$(buildConfiguration)_$(buildPlatform)"
                      publishLocation: "pipeline"

    - stage: Testing
      dependsOn: Build
      jobs:
          - job:
            displayName: Interaction tests
            steps:
                - task: NuGetToolInstaller@1
                  displayName: Install NuGet 5.8.0
                  inputs:
                      versionSpec: 5.8.0

                - task: NuGetCommand@2
                  displayName: Restore packages
                  inputs:
                      restoreSolution: "$(solutionUITests)"

                - task: DownloadPipelineArtifact@2
                  inputs:
                      buildType: "current"
                      artifactName: "uitests_$(buildConfiguration)_$(buildPlatform)"
                      targetPath: '$(System.DefaultWorkingDirectory)\artifacts\$(buildConfiguration)'

                - task: DownloadPipelineArtifact@2
                  inputs:
                      buildType: "current"
                      artifactName: "appxbundles_$(buildConfiguration)_$(buildPlatform)"
                      targetPath: '$(System.DefaultWorkingDirectory)\appxbundles'

                - task: PowerShell@2
                  inputs:
                      targetType: "inline"
                      script: |
                          # Find correct folder and run app install script.
                          cd ./appxbundles

                          $AppBundle = Get-ChildItem -Filter WinUIGallery*Test -Name
                          echo $AppBundle
                          cd $AppBundle
                          ./Add-AppDevPackage.ps1 -Force
                      errorActionPreference: "continue"
                      failOnStderr: true
                      workingDirectory: "$(System.DefaultWorkingDirectory)"

                - task: Windows Application Driver@0
                  inputs:
                      OperationType: "Start"
                      AgentResolution: "1080p"

                - task: VSTest@2
                  inputs:
                      testSelector: "testAssemblies"
                      testAssemblyVer2: |
                          **\UITests.dll
                          !**\*TestAdapter.dll
                          !**\obj\**
                          !**\ref\**
                      searchFolder: "$(System.DefaultWorkingDirectory)"

                - task: Windows Application Driver@0
                  inputs:
                      OperationType: "Stop"
